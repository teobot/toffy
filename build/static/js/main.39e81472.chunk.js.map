{"version":3,"sources":["helpers/StorageHelper.js","api/toffy.js","context/LoggedInContext.js","components/NavBar.js","context/ToastContext.js","context/WindowContext.js","functions/useWindowWidth.js","img/widescreen-020.jpg","screens/LoginScreen.js","img/widescreen-021.jpg","components/Tournament/TournamentConfig.js","functions/calculateCreated.js","components/Tournament/TournamentSearch/TournamentSearchCard.js","screens/HomeScreen.js","img/widescreen-014.jpg","img/widescreen-015.jpg","img/widescreen-016.jpg","img/widescreen-017.jpg","img/widescreen-018.jpg","screens/LandingScreen.js","img/widescreen-019.jpg","screens/AccountCreateScreen.js","components/Tournament/TournamentControls/UserPlayingButtonGroup.js","components/Tournament/AdministrationTools/AdminTools.js","components/Tournament/TournamentDisplays/SingleElimination/components/Player.js","components/img/edit.js","components/Tournament/TournamentDisplays/SingleElimination/components/Match.js","components/Tournament/TournamentDisplays/SingleElimination/components/Round.js","components/Tournament/TournamentDisplays/SingleElimination/TournamentBracketSegment.js","components/Tournament/TournamentDisplays/LeaderBoard/LeaderboardSegment.js","components/Tournament/TournamentDisplays/TournamentPlayerDisplay.js","components/Tournament/TournamentMenu.js","screens/TournamentScreen.js","components/User/ChartSegment.js","screens/UserScreen.js","screens/CreateTournamentScreen.js","functions/redirectLogin.js","functions/difference.js","screens/UserEditScreen.js","index.js"],"names":["StorageHelper","cname","localStorage","getItem","cvalue","setItem","removeItem","AxiosInstance","instance","axios","create","baseURL","timeout","token","getStorage","defaults","headers","common","LoggedInContext","createContext","NavBar","routes","history","useHistory","useContext","UserLoggedIn","handleLogout","username","user_id","id","Segment","inverted","clearing","padded","style","borderRadius","Menu","Item","onClick","push","alt","src","Dropdown","item","text","className","Divider","position","link","name","Button","color","compact","size","ToastContext","WindowContext","useState","window","innerWidth","windowWidth","setWindowWidth","innerHeight","windowHeight","setWindowHeight","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","useWindowWidth","LoginScreen","email","setEmail","password","setPassword","sideImageSize","setSideImageSize","handleUserLogin","showToast","toffy","document","getElementById","clientHeight","handleLogin","a","post","response","data","error","imageCoverStyle","backgroundSize","backgroundRepeat","backgroundPosition","Grid","Row","Column","computer","largeScreen","mobile","widescreen","tablet","width","height","backgroundColor","display","minHeight","backgroundImage","topImage","justifyContent","alignItems","Container","padding","Header","fontSize","Content","Subheader","section","Input","placeholder","onChange","event","target","value","fluid","hidden","type","tournament_types","states","ALLOWED_PROFILE_IMAGES","dayjs","require","relativeTime","calendar","calculateCreated","date","extend","fromNow","TournamentSearchCard","result","onHover","setOnHover","marginBottom","cursor","_id","onMouseEnter","onMouseLeave","basic","floated","Image","circular","creator","profile_pic","fontWeight","title","right","top","Icon","marginRight","players","Label","created","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","state","HomeScreen","results","setResults","getTournamentList","get","r","tournamentSearchDisplay","Group","margin","banner","as","container","stackable","map","index","LandingScreen","stats","setStats","delay","ms","Promise","res","setTimeout","getStats","textAlign","textShadow","stretched","tournament_count","user_count","matches_count","round_count","obj","image","elowidescreen","headerContent","tournamentypes","legendwidescreen","displayRow","GridCol","signupwidescreen","marginTop","reducer","action","payload","firstname","lastname","AccountCreateScreen","useReducer","dispatch","handleSubmit","handleInputChange","UserPlayingButtonGroup","tournamentData","getTournamentData","handlePlayerJoin","handlePlayerLeave","delete","i","length","checkIfUserInsidePlayers","negative","positive","AdminTools","tournament","tournamentTitle","setTournamentTitle","loading","setLoading","description","tournamentDescription","setTournamentDescription","handleTournamentProgress","handleTournamentUpdate","updateObj","patch","horizontal","Form","TextArea","rows","split","primary","disabled","Player","ThisX","ThisY","playerData","matchId","winner","score","TournamentContext","isAdmin","player","x","y","fill","filter","toString","edit","viewBox","d","Match","match","changeSelectedMatch","inProgress","isEditable","player1","player2","match_id","points","stroke","strokeWidth","pointer-events","Round","roundData","roundIndex","tournamentMatchData","polylineStyle","MatchHeight","MatchWidth","matches","matchData","matchIndex","dynamicViewSpace","Math","pow","round","distanceBetweenRounds","matchReducer","player1Selected","player2Selected","player1Score","player2Score","RobinRoundDisplay","match_data","tournament_id","Viewer","useRef","open","setOpen","modelMatch","setModelMatch","parseInt","UpdateMatchDetails","scores","current","zoom","Provider","background","SVGBackground","tool","TOOL_AUTO","ref","detectAutoPan","customMiniature","customToolbar","Modal","onClose","onOpen","columns","label","min","max","labelPosition","Actions","content","icon","TableRow","cell1","cell2","cell3","widths","Table","Cell","LeaderboardTableRow","playerScore","setPlayerScore","handleSave","rounded","elo","LeaderboardSegment","settings","striped","selectable","HeaderCell","scoreTitle","Body","sort","b","TournamentPlayerDisplay","vertical","verticalAlign","TournamentMenu","view","pointing","secondary","undefined","menuItem","active","TournamentScreen","useParams","setResult","checkTournamentView","v","t","doubling","format","fitted","textDecoration","ChartSegment","userData","itemLeft","itemRight","centerItem","chartRef","createRef","chartInstance","setChartInstance","myTournamentChartRef","getContext","labels","datasets","hoverOffset","config","options","plugins","legend","cutout","update","Chart","bottom","left","UserScreen","user","setUser","getUserInformation","date_joined","tournaments_organized","matches_played","total_tournaments_played","matches_won","attached","win_percentage","matches_lost","borderTop","listed","CreateTournamentScreen","inputStyle","maxWidth","settingContainerStyle","handleFormSubmit","selection","defaultValue","key","WHITELISTED_PATHS","difference","Object","entries","UserEditScreen","setUsername","handleUserUpdate","userRes","marginLeft","border","routeName","routerComponent","App","setUserLoggedIn","setToken","setUser_id","deleteStorage","login_response","setStorage","TOKEN_STORAGE_NAME","useLoginContext","LoginContext","useWindowContext","WindowContextValues","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","message","toast","info","success","warning","ToastContainer","ToastValues","location","useLocation","redirect","storageToken","request","method","url","Accept","loginAttempt","includes","pathname","RedirectLogin","route","path","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.39e81472.chunk.js","sourcesContent":["export default class StorageHelper {\r\n  static getStorage(cname) {\r\n    // getter\r\n    return localStorage.getItem(cname);\r\n  }\r\n\r\n  static setStorage(cname, cvalue) {\r\n    // setter\r\n    localStorage.setItem(cname, cvalue);\r\n  }\r\n\r\n  static checkInStorage(cname) {\r\n    if (localStorage.getItem(cname)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static deleteStorage(cname) {\r\n    localStorage.removeItem(cname);\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport StorageHelper from \"../helpers/StorageHelper\";\r\n\r\n// This is my axios instance,\r\n// Here I set the location of the tournament server\r\n\r\nconst DEV = false\r\nconst BACKEND_URL = \"https://api-toffy.herokuapp.com\"\r\n\r\nconst AxiosInstance = () => {\r\n  const instance = axios.create({\r\n    baseURL: DEV ? \"http://192.168.1.216:3333\" : BACKEND_URL,\r\n    timeout: 5000,\r\n  });\r\n\r\n  const token = StorageHelper.getStorage(\"@token\");\r\n  if (token) {\r\n    instance.defaults.headers.common[\"X-Authorization\"] = token;\r\n  }\r\n\r\n  delete instance.defaults.headers.common[\"Accept\"];\r\n\r\n  return instance;\r\n};\r\n\r\nexport default AxiosInstance();\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createContext, useState } from \"react\";\r\n\r\nimport StorageHelper from \"../helpers/StorageHelper\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const LoggedInContext = createContext();\r\n\r\nexport const TOKEN_STORAGE_NAME = \"@token\";\r\n\r\n// Importing CP\r\n// *\r\n// import { LoggedInContext } from \"./context/LoggedInContext\"\r\n// const { UserLoggedIn, handleLogout, handleUserLogin } = useContext(LoggedInContext)\r\n// *\r\n\r\nexport default () => {\r\n  // This handles the global user of the user location information\r\n  const [UserLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  // useStates variables\r\n  const [token, setToken] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n  const [user_id, setUser_id] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    //   This handles the user logout\r\n    toffy.defaults.headers.common[\"X-Authorization\"] = \"\";\r\n    StorageHelper.deleteStorage(\"@token\");\r\n    setToken(null);\r\n    setUsername(null);\r\n    setUser_id(null);\r\n    setUserLoggedIn(false);\r\n  };\r\n\r\n  const handleUserLogin = (login_response) => {\r\n    //  This handles the user logging in\r\n    //  login_response === { token, username, user_id }\r\n    toffy.defaults.headers.common[\"X-Authorization\"] = login_response.token;\r\n    StorageHelper.setStorage(\"@token\", login_response.token);\r\n    setToken(login_response.token);\r\n    setUsername(login_response.username);\r\n    setUser_id(login_response.user_id);\r\n    setUserLoggedIn(true);\r\n  };\r\n\r\n  return [\r\n    {\r\n      UserLoggedIn,\r\n      handleLogout,\r\n      handleUserLogin,\r\n      setUsername,\r\n      token,\r\n      username,\r\n      user_id,\r\n      TOKEN_STORAGE_NAME,\r\n    },\r\n  ];\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Button,\r\n  Image,\r\n  Grid,\r\n  Dropdown,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { LoggedInContext } from \"../context/LoggedInContext\";\r\n\r\nexport default function NavBar({ routes }) {\r\n  let history = useHistory();\r\n  const { UserLoggedIn, handleLogout, token, username, user_id } = useContext(\r\n    LoggedInContext\r\n  );\r\n  return (\r\n    <div id=\"navbar\">\r\n      <Segment inverted clearing padded style={{ borderRadius: 0 }}>\r\n        <Menu inverted>\r\n          <Menu.Item\r\n            onClick={() => {\r\n              history.push(UserLoggedIn ? \"/home\" : \"/\");\r\n            }}\r\n          >\r\n            <img\r\n              alt=\"company logo\"\r\n              src=\"https://react.semantic-ui.com/logo.png\"\r\n            />\r\n          </Menu.Item>\r\n\r\n          {false ? (\r\n            <>\r\n              <Menu.Item\r\n                onClick={() => {\r\n                  history.push(\"/create/tournament\");\r\n                }}\r\n                link\r\n                name=\"Tournament Creation\"\r\n              />\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {UserLoggedIn ? (\r\n            <Dropdown item text={username} className=\"right\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    history.push(`/u/${user_id}`);\r\n                  }}\r\n                  text=\"Profile\"\r\n                />\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    if (UserLoggedIn) {\r\n                      handleLogout();\r\n                      history.push(\"/\");\r\n                    } else {\r\n                      history.push(\"/login\");\r\n                    }\r\n                  }}\r\n                  text=\"Logout\"\r\n                />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ) : (\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item\r\n                onClick={() => {\r\n                  history.push(\"/login\");\r\n                }}\r\n                link\r\n                name=\"Login\"\r\n              />\r\n              <Menu.Item>\r\n                <Button\r\n                  onClick={() => {\r\n                    history.push(\"/create/account\");\r\n                  }}\r\n                  color=\"orange\"\r\n                  compact\r\n                  size=\"tiny\"\r\n                >\r\n                  SIGN UP\r\n                </Button>\r\n              </Menu.Item>\r\n            </Menu.Menu>\r\n          )}\r\n        </Menu>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createContext } from \"react\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const ToastContext = createContext();\r\n\r\nexport default () => {\r\n  // This handles the global user of the window dimension information\r\n\r\n  const showToast = (type, message) => {\r\n    switch (type) {\r\n      case \"info\":\r\n        toast.info(\"📝 \" + message);\r\n        break;\r\n      case \"success\":\r\n        toast.success(\"✔️ \" + message);\r\n        break;\r\n      case \"warning\":\r\n        toast.warning(\"⚠️ \" + message);\r\n        break;\r\n      case \"error\":\r\n        toast.error(\"🚨 \" + message);\r\n        break;\r\n      default:\r\n        toast.name(\"💡 \" + message);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return [\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={4000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick={true}\r\n      rtl={false}\r\n      pauseOnFocusLoss={false}\r\n      draggable={true}\r\n      pauseOnHover={true}\r\n    />,\r\n    { showToast },\r\n  ];\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createContext } from \"react\";\r\n\r\nimport useWindowWidth from \"../functions/useWindowWidth\";\r\n\r\nexport const WindowContext = createContext();\r\n\r\nexport default () => {\r\n  // This handles the global user of the window dimension information\r\n  const { windowWidth, windowHeight } = useWindowWidth();\r\n\r\n  return [{ windowWidth, windowHeight }];\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default () => {\r\n  // This hook returns the window dimensions\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n  const handleWindowSizeChange = () => {\r\n    setWindowHeight(window.innerHeight);\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowSizeChange);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\r\n    };\r\n  }, []);\r\n\r\n  return { windowWidth, windowHeight };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/widescreen-020.7abd3768.jpg\";","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport {\r\n  Container,\r\n  Input,\r\n  Header,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { LoggedInContext } from \"../context/LoggedInContext\";\r\nimport { ToastContext } from \"../context/ToastContext\";\r\nimport { WindowContext } from \"../context/WindowContext\";\r\n\r\nimport topImage from \"../img/widescreen-020.jpg\";\r\n\r\nexport default function LoginScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [sideImageSize, setSideImageSize] = useState(150);\r\n\r\n  let history = useHistory();\r\n\r\n  const { handleUserLogin } = useContext(LoggedInContext);\r\n  const { showToast } = useContext(ToastContext);\r\n  const { windowWidth, windowHeight } = useContext(WindowContext);\r\n\r\n  useEffect(() => {\r\n    if (toffy.defaults.headers.common[\"X-Authorization\"]) {\r\n      // Toffy has header so redirect\r\n      history.push(\"/home\");\r\n    }\r\n    setSideImageSize(document.getElementById(\"navbar\").clientHeight + 50);\r\n  }, []);\r\n\r\n  const handleLogin = async () => {\r\n    // Handle the submitting of the auth data\r\n    try {\r\n      // Make a response to login\r\n      const response = await toffy.post(\"/signin\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      // Tell Context user has logged in\r\n      handleUserLogin(response.data);\r\n\r\n      showToast(\"success\", \"Log in successful.\");\r\n\r\n      // Push the user to the home screen\r\n      history.push(\"/home\");\r\n    } catch (error) {\r\n      // : User failed logging in\r\n      showToast(\"error\", error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const imageCoverStyle = {\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: `${windowWidth > 650 ? \"center\" : \"top\"} center`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column\r\n            computer={6}\r\n            largeScreen={6}\r\n            mobile={16}\r\n            widescreen={6}\r\n            tablet={6}\r\n            width={6}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundColor: \"lavender\",\r\n                display: \"flex\",\r\n                minHeight:\r\n                  windowWidth > 650\r\n                    ? windowHeight - sideImageSize\r\n                    : windowHeight / 4,\r\n                ...imageCoverStyle,\r\n                backgroundImage: `url(${topImage})`,\r\n              }}\r\n              className=\"fade-image\"\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column\r\n            computer={10}\r\n            largeScreen={10}\r\n            mobile={16}\r\n            widescreen={10}\r\n            tablet={10}\r\n            width={10}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Container text style={{ padding: `0px ${windowWidth / 15}px` }}>\r\n                <Header inverted style={{ fontSize: 16 + windowWidth / 60 }}>\r\n                  <Header.Content>\r\n                    Log in\r\n                    <Header.Subheader>\r\n                      Welcome back! Please enter your details below.\r\n                    </Header.Subheader>\r\n                  </Header.Content>\r\n                </Header>\r\n                <Divider section />\r\n                <div>\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Email\"\r\n                      onChange={handleEmailChange}\r\n                      value={email}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                    />\r\n                  </div>\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Password\"\r\n                      onChange={handlePasswordChange}\r\n                      value={password}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                      type=\"password\"\r\n                    />\r\n                  </div>\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <a\r\n                      onClick={() => {\r\n                        history.push(\"/create/account\");\r\n                      }}\r\n                    >\r\n                      Don't have a account?\r\n                    </a>\r\n                  </div>\r\n                  <Divider section={windowWidth > 650} />\r\n                  <Button\r\n                    size={windowWidth > 650 ? \"huge\" : \"large\"}\r\n                    fluid\r\n                    onClick={handleLogin}\r\n                    color=\"orange\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/widescreen-021.218bb1ff.jpg\";","// Tournament enums\r\n\r\nexport const tournament_types = {\r\n  LEADERBOARD: \"Leaderboard\",\r\n  DOUBLE_ELIMINATION: \"Double Elimination\",\r\n  SINGLE_ELIMINATION: \"Single Elimination\",\r\n};\r\n\r\nexport const states = {\r\n  JOIN: \"Joining\",\r\n  PLAY: \"Playing\",\r\n  END: \"Ended\",\r\n};\r\n\r\n// Allowed User Profile images\r\nexport const ALLOWED_PROFILE_IMAGES = [\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-001.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-003.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-002.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-004.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-005.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-006.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-007.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-008.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-009.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-010.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-011.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-012.jpg\",\r\n  \"https://raw.githubusercontent.com/teobot/toffy-bucket/main/profle-image-013.jpg\",\r\n];\r\n","import { states } from \"../components/Tournament/TournamentConfig\";\r\n\r\nconst dayjs = require(\"dayjs\");\r\nconst relativeTime = require(\"dayjs/plugin/relativeTime\");\r\nconst calendar = require(\"dayjs/plugin/calendar\");\r\n\r\nconst calculateCreated = (date) => {\r\n  dayjs.extend(relativeTime);\r\n  return dayjs(date).fromNow();\r\n};\r\n\r\nexport const displayDate = (date) => {\r\n  dayjs.extend(relativeTime);\r\n  return dayjs(date).format(`MMMM DD, YYYY [at] hh:mm A`);\r\n};\r\n\r\nexport const shortDisplayDate = (date) => {\r\n  dayjs.extend(calendar);\r\n\r\n  return dayjs().calendar(dayjs(date), {\r\n    sameDay: \"[Today, ] H:mm\",\r\n    nextDay: \"MMM DD [,] H:mm\",\r\n    nextWeek: \"MMM DD [,] H:mm\",\r\n    lastDay: \"MMM DD [,] H:mm\",\r\n    lastWeek: \"MMM DD [,] H:mm\",\r\n    sameElse: \"MMM DD H:mm\",\r\n  });\r\n};\r\n\r\nexport const displayState = (state) => {\r\n  if (state === states.JOIN) {\r\n    return \"Joinable\";\r\n  }\r\n  if (state === states.PLAY) {\r\n    return \"In Progress\";\r\n  }\r\n  if (state === states.END) {\r\n    return \"Ended\";\r\n  }\r\n};\r\n\r\nexport default calculateCreated;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Image,\r\n  Icon,\r\n  Label,\r\n  Loader,\r\n  Placeholder,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { shortDisplayDate } from \"../../../functions/calculateCreated\";\r\n\r\nimport { WindowContext } from \"../../../context/WindowContext\";\r\n\r\nexport default function TournamentSearchCard({ history, result }) {\r\n  const { windowWidth, windowHeight } = useContext(WindowContext);\r\n\r\n  const [onHover, setOnHover] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#4a4c52\",\r\n        marginBottom: 3,\r\n        borderRadius: 3,\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={() => {\r\n        history.push(`/tournament/${result._id}`);\r\n      }}\r\n      onMouseEnter={() => {\r\n        setOnHover(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setOnHover(false);\r\n      }}\r\n    >\r\n      <Segment\r\n        basic\r\n        inverted={onHover}\r\n        floated\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <Header inverted>\r\n          <Image circular src={result.creator.profile_pic} />\r\n\r\n          <Header.Content>\r\n            <span\r\n              style={{ fontSize: 14, fontWeight: 600 }}\r\n              className=\"text-shadow\"\r\n            >\r\n              {result.title}\r\n            </span>\r\n            <div\r\n              style={{\r\n                ...(windowWidth > 650\r\n                  ? {\r\n                      position: \"absolute\",\r\n                      right: 14,\r\n                      top: 14,\r\n                    }\r\n                  : {\r\n                      padding: \"3px 0px\",\r\n                    }),\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 12, color: \"lightgrey\" }}>\r\n                <Icon name=\"user\" style={{ marginRight: 2 }} /> {result.players}\r\n              </span>\r\n              <Label color=\"black\" size=\"tiny\">\r\n                {shortDisplayDate(result.created)}\r\n              </Label>\r\n            </div>\r\n            <Header.Subheader style={{ fontSize: 12 }}>\r\n              {result.type} - {result.state}\r\n            </Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n  List,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport { WindowContext } from \"../context/WindowContext\";\r\nimport { ToastContext } from \"../context/ToastContext\";\r\n\r\nimport banner from \"../img/widescreen-021.jpg\";\r\n\r\nimport TournamentSearchCard from \"../components/Tournament/TournamentSearch/TournamentSearchCard\";\r\n\r\nexport default function HomeScreen() {\r\n  const [results, setResults] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  const { windowWidth, windowHeight } = useContext(WindowContext);\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  useEffect(() => {\r\n    getTournamentList();\r\n  }, []);\r\n\r\n  const getTournamentList = async () => {\r\n    try {\r\n      const r = await toffy.get(\"/find\");\r\n      setResults(r.data);\r\n    } catch (error) {\r\n      // : error getting the tournament list data\r\n      showToast(\"error\", \"Failed to retrieve data, please try again later\");\r\n    }\r\n  };\r\n\r\n  const tournamentSearchDisplay = (\r\n    <Grid.Column\r\n      computer={5}\r\n      largeScreen={5}\r\n      mobile={16}\r\n      widescreen={5}\r\n      tablet={5}\r\n      width={5}\r\n    >\r\n      <Segment.Group>\r\n        <Segment inverted>All</Segment>\r\n        <Segment inverted>Joining</Segment>\r\n        <Segment inverted>In Progress</Segment>\r\n        <Segment inverted>Ended</Segment>\r\n      </Segment.Group>\r\n    </Grid.Column>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: 0, margin: 0, position: \"relative\" }}>\r\n        <div\r\n          className=\"image-back fade-image\"\r\n          style={{\r\n            backgroundImage: `url(${banner})`,\r\n            height: windowHeight / 4,\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n        <Button\r\n          color=\"orange\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: windowHeight / 10,\r\n            right: 50,\r\n          }}\r\n          as=\"a\"\r\n          onClick={() => {\r\n            history.push(\"/create/tournament\");\r\n          }}\r\n          size=\"big\"\r\n        >\r\n          CREATE TOURNAMENT\r\n        </Button>\r\n      </div>\r\n\r\n      <Divider hidden section />\r\n\r\n      <Grid container padded=\"vertically\" stackable inverted>\r\n        <Grid.Row>\r\n          {windowWidth <= 768 ? tournamentSearchDisplay : null}\r\n          <Grid.Column\r\n            computer={11}\r\n            largeScreen={11}\r\n            mobile={16}\r\n            widescreen={11}\r\n            tablet={11}\r\n            width={11}\r\n          >\r\n            {results ? (\r\n              <Segment.Group>\r\n                {results.map((result, index) => {\r\n                  return (\r\n                    <TournamentSearchCard result={result} history={history} />\r\n                  );\r\n                })}\r\n              </Segment.Group>\r\n            ) : (\r\n              <Segment basic>\r\n                <Header inverted>\r\n                  <Header.Content>No Results</Header.Content>\r\n                </Header>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n          {windowWidth > 768 ? tournamentSearchDisplay : null}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/widescreen-014.d97bf6b2.jpg\";","export default __webpack_public_path__ + \"static/media/widescreen-015.aee439d4.jpg\";","export default __webpack_public_path__ + \"static/media/widescreen-016.10a08db8.jpg\";","export default __webpack_public_path__ + \"static/media/widescreen-017.967136be.jpg\";","export default __webpack_public_path__ + \"static/media/widescreen-018.6233aece.jpg\";","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { Button, Grid, Header, Image, Segment } from \"semantic-ui-react\";\r\n\r\nimport widescreen from \"../img/widescreen-014.jpg\";\r\nimport elowidescreen from \"../img/widescreen-015.jpg\";\r\nimport tournamentypes from \"../img/widescreen-016.jpg\";\r\nimport legendwidescreen from \"../img/widescreen-017.jpg\";\r\nimport signupwidescreen from \"../img/widescreen-018.jpg\";\r\n\r\nimport { WindowContext } from \"../context/WindowContext\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function LandingScreen() {\r\n  let { windowWidth, windowHeight } = useContext(WindowContext);\r\n\r\n  const [stats, setStats] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  const imageCoverStyle = {\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center center\",\r\n  };\r\n\r\n  const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\n  const getStats = async () => {\r\n    // Get the toffy stats\r\n    try {\r\n      const res = await toffy.get(\"/stat/user\");\r\n      setStats(res.data);\r\n    } catch (error) {\r\n      // : Error getting stats\r\n      await delay(20000);\r\n      getStats();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStats();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: windowHeight * 0.7,\r\n          backgroundImage: `url(${widescreen})`,\r\n          ...imageCoverStyle,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Segment basic textAlign=\"center\">\r\n          <Header\r\n            style={{\r\n              fontSize: 45 + windowWidth / 40,\r\n              textShadow: \"3px 1px black\",\r\n            }}\r\n            inverted\r\n          >\r\n            <Image circular src=\"https://react.semantic-ui.com/logo.png\" />\r\n            <Header.Content>\r\n              Toffy\r\n              <Header.Subheader\r\n                style={{\r\n                  color: \"orange\",\r\n                  fontSize: 18 + windowWidth / 400,\r\n                  fontWeight: 900,\r\n                }}\r\n              >\r\n                tournaments made simple\r\n              </Header.Subheader>\r\n            </Header.Content>\r\n          </Header>\r\n        </Segment>\r\n      </div>\r\n\r\n      <Segment basic>\r\n        <Grid style={{ padding: \"30px 0px\" }} stretched>\r\n          <Grid.Row stretched>\r\n            {[\r\n              {\r\n                title: \"Total tournaments organized\",\r\n                value: stats ? stats.tournament_count : \"...\",\r\n              },\r\n              {\r\n                title: \"Users Signed Up\",\r\n                value: stats ? stats.user_count : \"...\",\r\n              },\r\n              {\r\n                title: \"Total Matches Played\",\r\n                value: stats ? stats.matches_count : \"...\",\r\n              },\r\n              {\r\n                title: \"Total Rounds Played\",\r\n                value: stats ? stats.round_count : \"...\",\r\n              },\r\n            ].map((obj) => {\r\n              return (\r\n                <Grid.Column\r\n                  computer={4}\r\n                  largeScreen={4}\r\n                  widescreen={4}\r\n                  tablet={8}\r\n                  mobile={16}\r\n                >\r\n                  <Segment\r\n                    basic\r\n                    textAlign=\"center\"\r\n                    style={{ padding: \"25px 0px\" }}\r\n                  >\r\n                    <Header inverted style={{ fontSize: 42 }}>\r\n                      {obj.value}\r\n                    </Header>\r\n                    <Header.Subheader style={{ color: \"grey\" }}>\r\n                      {obj.title}\r\n                    </Header.Subheader>\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n\r\n      <Grid>\r\n        {[\r\n          {\r\n            image: elowidescreen,\r\n            headerContent: (\r\n              <Header.Content>\r\n                Elo Scoring\r\n                <Header.Subheader>\r\n                  Each player is ranked using the ELO system, making tournaments\r\n                  fairer with less effort.\r\n                </Header.Subheader>\r\n              </Header.Content>\r\n            ),\r\n          },\r\n          {\r\n            image: tournamentypes,\r\n            headerContent: (\r\n              <Header.Content>\r\n                Multiple Types\r\n                <Header.Subheader>\r\n                  Toffy includes a range of different tournament types,\r\n                  including single elimination and leaderboards.\r\n                </Header.Subheader>\r\n              </Header.Content>\r\n            ),\r\n          },\r\n          {\r\n            image: legendwidescreen,\r\n            headerContent: (\r\n              <Header.Content>\r\n                Super simple UI\r\n                <Header.Subheader>\r\n                  The simple UI delivers all the information you need and\r\n                  nothing else.\r\n                </Header.Subheader>\r\n              </Header.Content>\r\n            ),\r\n          },\r\n        ].map((displayRow, index) => {\r\n          const GridCol = (\r\n            <Grid.Column\r\n              computer={8}\r\n              largeScreen={8}\r\n              widescreen={8}\r\n              tablet={8}\r\n              mobile={16}\r\n            >\r\n              <Image src={displayRow.image} fluid />\r\n            </Grid.Column>\r\n          );\r\n          return (\r\n            <Grid.Row stretched>\r\n              {index % 2 !== 0 ? GridCol : null}\r\n              <Grid.Column\r\n                computer={8}\r\n                largeScreen={8}\r\n                widescreen={8}\r\n                tablet={8}\r\n                mobile={16}\r\n              >\r\n                <Segment\r\n                  padded\r\n                  basic\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Header inverted size=\"large\" textAlign=\"center\">\r\n                    {displayRow.headerContent}\r\n                  </Header>\r\n                </Segment>\r\n              </Grid.Column>\r\n              {index % 2 === 0 ? GridCol : null}\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: windowHeight * 0.4,\r\n          backgroundColor: \"lightblue\",\r\n          backgroundImage: `url(${signupwidescreen})`,\r\n          ...imageCoverStyle,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: 25,\r\n        }}\r\n      >\r\n        <Segment basic textAlign=\"center\">\r\n          <Header\r\n            style={{\r\n              fontSize: 25 + windowWidth / 40,\r\n              textShadow: \"3px 1px black\",\r\n            }}\r\n            inverted\r\n          >\r\n            <Header.Content>\r\n              Join Today\r\n              <Header.Subheader\r\n                style={{\r\n                  color: \"orange\",\r\n                  fontSize: 18 + windowWidth / 400,\r\n                  fontWeight: 900,\r\n                }}\r\n              >\r\n                <Button\r\n                  as=\"a\"\r\n                  onClick={() => {\r\n                    history.push(\"/create/account\");\r\n                  }}\r\n                  color=\"orange\"\r\n                  compact\r\n                  size=\"large\"\r\n                >\r\n                  FREE SIGN UP\r\n                </Button>\r\n              </Header.Subheader>\r\n            </Header.Content>\r\n          </Header>\r\n        </Segment>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/widescreen-019.3e3dbb63.jpg\";","import React, { useReducer, useContext, useState, useEffect } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Input,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport { LoggedInContext } from \"../context/LoggedInContext\";\r\nimport { ToastContext } from \"../context/ToastContext\";\r\nimport { WindowContext } from \"../context/WindowContext\";\r\n\r\nimport topImage from \"../img/widescreen-019.jpg\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"change_username\":\r\n      return { ...state, username: action.payload };\r\n    case \"change_firstname\":\r\n      return { ...state, firstname: action.payload };\r\n    case \"change_lastname\":\r\n      return { ...state, lastname: action.payload };\r\n    case \"change_email\":\r\n      return { ...state, email: action.payload };\r\n    case \"change_password\":\r\n      return { ...state, password: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function AccountCreateScreen() {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    username: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [sideImageSize, setSideImageSize] = useState(150);\r\n\r\n  let history = useHistory();\r\n\r\n  const { handleUserLogin } = useContext(LoggedInContext);\r\n  const { showToast } = useContext(ToastContext);\r\n  let { windowWidth, windowHeight } = useContext(WindowContext);\r\n\r\n  useEffect(() => {\r\n    if (toffy.defaults.headers.common[\"X-Authorization\"]) {\r\n      // Toffy has header so redirect\r\n      history.push(\"/home\");\r\n    }\r\n    setSideImageSize(document.getElementById(\"navbar\").clientHeight + 50);\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    // Handle submit of player information\r\n    try {\r\n      // make the account post\r\n      const r = await toffy.post(\"/signup\", state);\r\n      // account creation successful\r\n\r\n      // Tell Context user has logged in\r\n      handleUserLogin(r.data);\r\n\r\n      // Push the user to the home screen\r\n      history.push(\"/home\");\r\n    } catch (error) {\r\n      showToast(\"error\", error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event, type) => {\r\n    dispatch({ type, payload: event.target.value });\r\n  };\r\n\r\n  const imageCoverStyle = {\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: `${windowWidth > 650 ? \"center\" : \"top\"} center`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column\r\n            computer={6}\r\n            largeScreen={6}\r\n            mobile={16}\r\n            widescreen={6}\r\n            tablet={6}\r\n            width={6}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundColor: \"lavender\",\r\n                display: \"flex\",\r\n                minHeight:\r\n                  windowWidth > 650\r\n                    ? windowHeight - sideImageSize\r\n                    : windowHeight / 4,\r\n                ...imageCoverStyle,\r\n                backgroundImage: `url(${topImage})`,\r\n              }}\r\n              className=\"fade-image\"\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column\r\n            computer={10}\r\n            largeScreen={10}\r\n            mobile={16}\r\n            widescreen={10}\r\n            tablet={10}\r\n            width={10}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Container text style={{ padding: `0px ${windowWidth / 15}px` }}>\r\n                <Header inverted style={{ fontSize: 16 + windowWidth / 60 }}>\r\n                  <Header.Content>\r\n                    Sign Up\r\n                    <Header.Subheader>\r\n                      Get started today, by entering you details below.\r\n                    </Header.Subheader>\r\n                  </Header.Content>\r\n                </Header>\r\n                <Divider section />\r\n                <div>\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Username\"\r\n                      onChange={(event) => {\r\n                        handleInputChange(event, \"change_username\");\r\n                      }}\r\n                      value={state.username}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                    />\r\n                  </div>\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Firstname\"\r\n                      onChange={(event) => {\r\n                        handleInputChange(event, \"change_firstname\");\r\n                      }}\r\n                      value={state.firstname}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                    />\r\n                  </div>\r\n\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Lastname\"\r\n                      onChange={(event) => {\r\n                        handleInputChange(event, \"change_lastname\");\r\n                      }}\r\n                      value={state.lastname}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                    />\r\n                  </div>\r\n\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Email\"\r\n                      onChange={(event) => {\r\n                        handleInputChange(event, \"change_email\");\r\n                      }}\r\n                      value={state.email}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                    />\r\n                  </div>\r\n\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"Password\"\r\n                      onChange={(event) => {\r\n                        handleInputChange(event, \"change_password\");\r\n                      }}\r\n                      value={state.password}\r\n                      className=\"settingInput\"\r\n                      fluid\r\n                      type=\"password\"\r\n                    />\r\n                  </div>\r\n\r\n                  <Divider hidden />\r\n                  <div>\r\n                    <a\r\n                      onClick={() => {\r\n                        history.push(\"/login\");\r\n                      }}\r\n                    >\r\n                      Already have a account?\r\n                    </a>\r\n                  </div>\r\n                  <Divider section={windowWidth > 650} />\r\n                  <Button\r\n                    size={windowWidth > 650 ? \"huge\" : \"large\"}\r\n                    fluid\r\n                    onClick={handleSubmit}\r\n                    color=\"orange\"\r\n                  >\r\n                    CREATE ACCOUNT\r\n                  </Button>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Button, Container, Segment } from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../../../api/toffy\";\r\n\r\nimport { LoggedInContext } from \"../../../context/LoggedInContext\";\r\nimport { ToastContext } from \"../../../context/ToastContext\";\r\n\r\nexport default function UserPlayingButtonGroup({\r\n  tournamentData,\r\n  getTournamentData,\r\n}) {\r\n  const { players, state, _id } = tournamentData;\r\n\r\n  const { user_id } = useContext(LoggedInContext);\r\n\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  const handlePlayerJoin = async () => {\r\n    //   Handle the user wanting to join the tournament\r\n    try {\r\n      const r = await toffy.post(`/tournament/${_id}/join`);\r\n      await getTournamentData();\r\n    } catch (error) {\r\n      // : player failed to join\r\n      showToast(\"error\", \"Failed to join tournament.\");\r\n    }\r\n  };\r\n\r\n  const handlePlayerLeave = async () => {\r\n    //   Handle the player wanting to leave the tournament\r\n    try {\r\n      const r = await toffy.delete(`/tournament/${_id}/leave`);\r\n      await getTournamentData();\r\n    } catch (error) {\r\n      // : player failed to leave the tournament\r\n      showToast(\"error\", \"Failed to leave tournament.\");\r\n    }\r\n  };\r\n\r\n  const checkIfUserInsidePlayers = () => {\r\n    // This function returns true if the player is playing in the tournament\r\n    for (let i = 0; i < players.length; i++) {\r\n      const player = players[i];\r\n      if (player._id === user_id) {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (state === \"Joining\") {\r\n    return checkIfUserInsidePlayers() ? (\r\n      <Button negative onClick={handlePlayerLeave}>\r\n        Leave\r\n      </Button>\r\n    ) : (\r\n      <Button positive onClick={handlePlayerJoin}>\r\n        Join\r\n      </Button>\r\n    );\r\n  } else {\r\n    //   Tournament is either in playing or ending\r\n    return null;\r\n  }\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Input,\r\n  Segment,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../../../api/toffy\";\r\n\r\nimport { states } from \"../TournamentConfig\";\r\n\r\nimport { ToastContext } from \"../../../context/ToastContext\";\r\n\r\nexport default function AdminTools({ tournament, getTournamentData }) {\r\n  const [tournamentTitle, setTournamentTitle] = useState(tournament.title);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [tournamentDescription, setTournamentDescription] = useState(\r\n    tournament.description\r\n  );\r\n\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  const handleTournamentProgress = async () => {\r\n    // Handle the user wanting to progress the tournament\r\n    try {\r\n      const r = await toffy.post(`/tournament/${tournament._id}/progress`);\r\n      await getTournamentData();\r\n    } catch (error) {\r\n      // : handle the progression on fail\r\n      showToast(\"error\", \"Tournament progression failed.\");\r\n    }\r\n  };\r\n\r\n  const handleTournamentUpdate = async () => {\r\n    // Handle patching the tournament\r\n    setLoading(true);\r\n    let updateObj = {\r\n      ...(tournamentTitle ? { title: tournamentTitle } : null),\r\n      ...(tournamentDescription\r\n        ? { description: tournamentDescription }\r\n        : null),\r\n    };\r\n\r\n    try {\r\n      // Send the update off\r\n      await toffy.patch(`/tournament/${tournament._id}`, updateObj);\r\n\r\n      // Update the tournament information\r\n      await getTournamentData();\r\n    } catch (error) {\r\n      //  : failed updating the tournament\r\n      showToast(\"error\", \"Failed update, try again later.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Divider hidden />\r\n      <Segment basic>\r\n        <Header style={{ color: \"lightgrey\" }} as=\"h2\">\r\n          <Header.Content>\r\n            Settings\r\n            <Header.Subheader style={{ color: \"lightgrey\" }}>\r\n              Manage aspects of the tournament.\r\n            </Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n      </Segment>\r\n\r\n      <Divider />\r\n\r\n      <Segment.Group horizontal>\r\n        <Segment basic>\r\n          <div style={{ marginBottom: 15, padding: 5 }}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Tournament title</Header.Content>\r\n            </Header>\r\n            <Input\r\n              onChange={(event, data) => {\r\n                setTournamentTitle(data.value);\r\n              }}\r\n              fluid\r\n              value={tournamentTitle}\r\n              className=\"settingInput\"\r\n            />\r\n            <div className=\"settingLabel\">\r\n              remember to keep the tournament title simple and searchable, don't\r\n              include any bad words :(\r\n            </div>\r\n          </div>\r\n          <div style={{ marginBottom: 15, padding: 5 }}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Tournament Description</Header.Content>\r\n            </Header>\r\n            <Form>\r\n              <TextArea\r\n                rows={\r\n                  tournamentDescription.split(\"\\n\").length > 10\r\n                    ? 11\r\n                    : tournamentDescription.split(\"\\n\").length + 1\r\n                }\r\n                onChange={(event, data) => {\r\n                  setTournamentDescription(data.value);\r\n                }}\r\n                value={tournamentDescription}\r\n                className=\"settingTextArea\"\r\n              />\r\n            </Form>\r\n            <div className=\"settingLabel\">\r\n              describe your tournament and include any rules that players might\r\n              need to read\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: 15, padding: 5 }}>\r\n            <Button onClick={handleTournamentUpdate} primary loading={loading}>\r\n              Update Tournament\r\n            </Button>\r\n            <div className=\"settingLabel\">\r\n              update any changes to the tournament title or description\r\n            </div>\r\n          </div>\r\n\r\n          <Divider section />\r\n\r\n          <div style={{ marginBottom: 15, padding: 5 }}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Tournament Progression</Header.Content>\r\n            </Header>\r\n            <Button\r\n              onClick={handleTournamentProgress}\r\n              disabled={tournament.state === states.END}\r\n              color={\r\n                tournament.state === states.JOIN\r\n                  ? \"green\"\r\n                  : tournament.state === states.PLAY\r\n                  ? \"red\"\r\n                  : \"\"\r\n              }\r\n            >\r\n              {tournament.state === states.JOIN\r\n                ? \"Start Tournament\"\r\n                : tournament.state === states.PLAY\r\n                ? \"End Tournament\"\r\n                : \"Tournament Finished\"}\r\n            </Button>\r\n            {/* <TournamentStateDisplayGroup tournament={tournament} /> */}\r\n            <div className=\"settingLabel\">\r\n              you can progress the tournament here\r\n            </div>\r\n          </div>\r\n        </Segment>\r\n\r\n        <Segment></Segment>\r\n      </Segment.Group>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\n\r\nimport { TournamentContext } from \"../TournamentBracketSegment\";\r\n\r\nexport default function Player({\r\n  ThisX,\r\n  ThisY,\r\n  matchId,\r\n  playerData,\r\n  width,\r\n  height,\r\n  winner,\r\n}) {\r\n  const { isAdmin } = useContext(TournamentContext);\r\n  const { score, player } = playerData;\r\n\r\n  return (\r\n    <g>\r\n      {/* Text and Score Background */}\r\n      <rect\r\n        x={ThisX}\r\n        y={ThisY}\r\n        width={width}\r\n        height={height / 2}\r\n        style={{ fill: \"#58595e\" }}\r\n      />\r\n\r\n      {/* Username Text */}\r\n      <text\r\n        style={{\r\n          fontSize: 14,\r\n          fontWeight: \"bold\",\r\n          fill: \"white\",\r\n          filter: \"drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7))\",\r\n        }}\r\n        x={ThisX + 10}\r\n        y={ThisY + 20}\r\n      >\r\n        {player ? player.username : null}\r\n      </text>\r\n\r\n      {winner ? (\r\n        <g>\r\n          {/* Score container */}\r\n          <rect\r\n            x={ThisX + width - 35}\r\n            y={ThisY}\r\n            width={35}\r\n            height={height / 2}\r\n            style={{ fill: winner._id === player._id ? \"#ff741f\" : \"#77777f\" }}\r\n          />\r\n\r\n          {/* Score Text */}\r\n          <text\r\n            style={{\r\n              fontSize: 14,\r\n              fontWeight: \"normal\",\r\n              fill: \"black\",\r\n              filter: \"drop-shadow( 1px 1px 1px rgba(0, 0, 0, .7))\",\r\n            }}\r\n            x={ThisX + width - (17 + `${player ? score: \"\"}`.toString().length * 4)}\r\n            y={ThisY + height / 3}\r\n          >\r\n            {player ? score : null}\r\n          </text>\r\n        </g>\r\n      ) : null}\r\n    </g>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function edit({ height, width, x, y, color, onClick }) {\r\n  // This function returns a SVG image, that looks like a editing symbol\r\n  return (\r\n    <svg\r\n      onClick={onClick}\r\n      x={x}\r\n      y={y}\r\n      height={`${height}pt`}\r\n      viewBox=\"0 -1 401.52289 401\"\r\n      width={`${width}pt`}\r\n      style={{\r\n        fill: color,\r\n        filter: \"drop-shadow( 5px 5px 5px rgba(0, 0, 0, 1))\",\r\n      }}\r\n    >\r\n      <path d=\"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0\" />\r\n      <path d=\"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0\" />\r\n    </svg>\r\n  );\r\n}\r\n","import Player from \"./Player\";\r\n\r\nimport { TournamentContext } from \"../TournamentBracketSegment\";\r\nimport { useContext } from \"react\";\r\n\r\nimport Edit from \"../../../../img/edit\";\r\n\r\nexport default function Match({ ThisX, ThisY, match, width, height }) {\r\n  const polylineStyle = { fill: \"none\", stroke: \"black\", strokeWidth: 1 };\r\n  const { isAdmin, changeSelectedMatch, inProgress } = useContext(\r\n    TournamentContext\r\n  );\r\n\r\n  const isEditable =\r\n    !match.winner &&\r\n    isAdmin &&\r\n    match.player1.player &&\r\n    match.player2.player &&\r\n    inProgress;\r\n\r\n  const displayMatchId = false;\r\n\r\n  return (\r\n    <g>\r\n      {/* Player Top */}\r\n      <Player\r\n        width={width}\r\n        height={height}\r\n        ThisX={ThisX}\r\n        ThisY={ThisY}\r\n        winner={match.winner}\r\n        playerData={match.player1}\r\n        matchId={match.match_id}\r\n      />\r\n\r\n      {/* Player Bottom */}\r\n      <Player\r\n        width={width}\r\n        height={height}\r\n        ThisX={ThisX}\r\n        ThisY={ThisY + height / 2}\r\n        winner={match.winner}\r\n        playerData={match.player2}\r\n        matchId={match.match_id}\r\n      />\r\n\r\n      {/* Line Between Players */}\r\n      <polyline\r\n        points={`\r\n          ${ThisX},${ThisY + 30} \r\n          ${isEditable ? `${ThisX + width * 0.75}` : `${ThisX + width}`},${\r\n          ThisY + 30\r\n        }\r\n        `}\r\n        style={polylineStyle}\r\n      />\r\n\r\n      {/* Match Editing button for admins */}\r\n      {isEditable ? (\r\n        <g>\r\n          <rect\r\n            pointer-events=\"visible\"\r\n            style={{ fill: \"none\" }}\r\n            onClick={() => {\r\n              changeSelectedMatch(match);\r\n            }}\r\n            height={34}\r\n            width={35}\r\n            x={ThisX + width - 43}\r\n            y={ThisY + 14}\r\n          />\r\n          <Edit\r\n            color={\"#2a303f\"}\r\n            height={22}\r\n            width={22}\r\n            x={ThisX + width - 40}\r\n            y={ThisY + 15}\r\n          />\r\n        </g>\r\n      ) : null}\r\n\r\n      {/* Match Id text */}\r\n      {displayMatchId ? (\r\n        <>\r\n          <circle\r\n            cx={ThisX - 4}\r\n            cy={ThisY - 4}\r\n            r={14}\r\n            style={{ fill: \"lightgreen\" }}\r\n          />\r\n          <text x={ThisX - 8} y={ThisY}>\r\n            {match.match_id}\r\n          </text>\r\n          <circle\r\n            cx={ThisX + width}\r\n            cy={ThisY - 4}\r\n            r={14}\r\n            style={{ fill: \"pink\" }}\r\n          />\r\n          <text x={ThisX + width - 4} y={ThisY}>\r\n            {match.next_match_id}\r\n          </text>\r\n        </>\r\n      ) : null}\r\n    </g>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Match from \"./Match\";\r\n\r\nexport default function Round({ roundData, roundIndex, tournamentMatchData }) {\r\n  const polylineStyle = { fill: \"none\", stroke: \"white\", strokeWidth: 4 };\r\n  const MatchHeight = 60;\r\n  const MatchWidth = 225;\r\n  const distanceBetweenRounds = 80;\r\n  const paddingBetweenMatches = 15;\r\n  return (\r\n    <g>\r\n      {roundData.matches.map((matchData, matchIndex) => {\r\n        const ThisX = roundIndex * (distanceBetweenRounds + MatchWidth);\r\n\r\n        const dynamicViewSpace =\r\n          paddingBetweenMatches * Math.pow(2, roundData.round + 2);\r\n\r\n        const paddingFromTop =\r\n          MatchHeight * ((Math.pow(2, roundData.round) - 2) / 2);\r\n\r\n        const distanceBetweenMatches = dynamicViewSpace * matchIndex;\r\n\r\n        const ThisY = paddingFromTop + distanceBetweenMatches;\r\n\r\n        return (\r\n          <g>\r\n            <Match\r\n              width={MatchWidth}\r\n              height={MatchHeight}\r\n              match={matchData}\r\n              ThisX={ThisX}\r\n              ThisY={ThisY}\r\n            />\r\n            {matchIndex % 2 === 0 &&\r\n            roundData.round !== tournamentMatchData.length ? (\r\n              <polyline\r\n                points={`\r\n                    ${ThisX + MatchWidth + 5},${ThisY + MatchHeight / 2} \r\n                    ${ThisX + MatchWidth + distanceBetweenRounds / 2},${\r\n                  ThisY + MatchHeight / 2\r\n                } \r\n                    ${ThisX + MatchWidth + distanceBetweenRounds / 2},${\r\n                  ThisY + dynamicViewSpace * 1 + MatchHeight / 2\r\n                } \r\n                    ${ThisX + MatchWidth + 5},${\r\n                  ThisY + dynamicViewSpace * 1 + MatchHeight / 2\r\n                }\r\n                `}\r\n                style={polylineStyle}\r\n              />\r\n            ) : null}\r\n            {roundData.round !== 1 ? (\r\n              <polyline\r\n                points={`\r\n                    ${ThisX - 5},${ThisY + MatchHeight / 2} \r\n                    ${ThisX - distanceBetweenRounds / 2},${\r\n                  ThisY + MatchHeight / 2\r\n                }\r\n                `}\r\n                style={polylineStyle}\r\n              />\r\n            ) : null}\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n}\r\n","import React, {\r\n  useRef,\r\n  useEffect,\r\n  createContext,\r\n  useState,\r\n  useReducer,\r\n  useContext,\r\n} from \"react\";\r\n\r\nimport { Divider, Grid, Header, Modal, Button, Input } from \"semantic-ui-react\";\r\n\r\nimport { ToastContext } from \"../../../../context/ToastContext\";\r\nimport { WindowContext } from \"../../../../context/WindowContext\";\r\n\r\nimport { TOOL_AUTO, UncontrolledReactSVGPanZoom } from \"react-svg-pan-zoom\";\r\n\r\nimport Round from \"./components/Round\";\r\n\r\nimport toffy from \"../../../../api/toffy\";\r\n\r\nexport const TournamentContext = createContext();\r\n\r\nconst matchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"change_player1Selected\":\r\n      return { ...state, player1Selected: true, player2Selected: false };\r\n    case \"change_player2Selected\":\r\n      return { ...state, player2Selected: true, player1Selected: false };\r\n    case \"change_player1Score\":\r\n      return { ...state, player1Score: action.payload };\r\n    case \"change_player2Score\":\r\n      return { ...state, player2Score: action.payload };\r\n    case \"reset\":\r\n      return {\r\n        player1Selected: false,\r\n        player2Selected: false,\r\n        player1Score: 0,\r\n        player2Score: 0,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function RobinRoundDisplay({\r\n  match_data,\r\n  isAdmin,\r\n  tournament_id,\r\n  getTournamentData,\r\n  inProgress,\r\n}) {\r\n  const Viewer = useRef(null);\r\n  const { windowHeight } = useContext(WindowContext);\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  const [state, dispatch] = useReducer(matchReducer, {\r\n    player1Selected: false,\r\n    player2Selected: false,\r\n    player1Score: 0,\r\n    player2Score: 0,\r\n  });\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [modelMatch, setModelMatch] = useState(null);\r\n\r\n  const changeSelectedMatch = (Match) => {\r\n    setModelMatch(Match);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleInputChange = (event, data) => {\r\n    dispatch({ type: `change_${data.name}`, payload: parseInt(data.value) });\r\n  };\r\n\r\n  const UpdateMatchDetails = async () => {\r\n    try {\r\n      const r = await toffy.patch(\r\n        `/tournament/${tournament_id}/match/${modelMatch._id}`,\r\n        {\r\n          winner: state.player1Selected\r\n            ? \"player1\"\r\n            : state.player2Selected\r\n            ? \"player2\"\r\n            : null,\r\n          scores: {\r\n            player1: state.player1Score,\r\n            player2: state.player2Score,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Match update is successful\r\n      setOpen(false);\r\n      showToast(\"success\", \"Match updated.\");\r\n      await getTournamentData();\r\n    } catch (error) {\r\n      // : failed match update\r\n      showToast(\"error\", \"Match update failed, try again later.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Viewer.current.zoom(150, 150, 0.7);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TournamentContext.Provider\r\n        value={{ isAdmin, inProgress, changeSelectedMatch }}\r\n      >\r\n        <UncontrolledReactSVGPanZoom\r\n          background=\"#24262e\"\r\n          SVGBackground=\"#24262e\"\r\n          tool={TOOL_AUTO}\r\n          ref={Viewer}\r\n          width=\"100%\"\r\n          height={windowHeight / 2}\r\n          detectAutoPan={false}\r\n          customMiniature={() => {\r\n            return null;\r\n          }}\r\n          customToolbar={() => {\r\n            return null;\r\n          }}\r\n        >\r\n          <svg>\r\n            {match_data.map((roundData, roundIndex) => {\r\n              return (\r\n                <Round\r\n                  roundData={roundData}\r\n                  roundIndex={roundIndex}\r\n                  tournamentMatchData={match_data}\r\n                />\r\n              );\r\n            })}\r\n          </svg>\r\n        </UncontrolledReactSVGPanZoom>\r\n      </TournamentContext.Provider>\r\n\r\n      <Modal\r\n        onClose={() => {\r\n          dispatch({ type: \"reset\" });\r\n          setOpen(false);\r\n        }}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n      >\r\n        <Modal.Header>Edit Match Details</Modal.Header>\r\n\r\n        {modelMatch ? (\r\n          <Modal.Content>\r\n            <Header textAlign=\"center\" size=\"huge\">\r\n              Who won?\r\n            </Header>\r\n\r\n            <Grid stretched>\r\n              <Grid.Row columns=\"equal\" stretched>\r\n                <Grid.Column>\r\n                  <Button\r\n                    positive={state.player1Selected}\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: \"change_player1Selected\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    {modelMatch.player1.player.username}\r\n                  </Button>\r\n                </Grid.Column>\r\n                <Grid.Column width={2}></Grid.Column>\r\n                <Grid.Column>\r\n                  <Button\r\n                    positive={state.player2Selected}\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: \"change_player2Selected\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    {modelMatch.player2.player.username}\r\n                  </Button>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n              <Divider />\r\n              <Grid.Row columns=\"equal\" stretched>\r\n                <Grid.Column>\r\n                  <Input\r\n                    fluid\r\n                    label=\"Player 1 Score\"\r\n                    type=\"number\"\r\n                    name=\"player1Score\"\r\n                    value={state.player1Score}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={2}></Grid.Column>\r\n                <Grid.Column>\r\n                  <Input\r\n                    fluid\r\n                    label=\"Player 2 Score\"\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={9999}\r\n                    name=\"player2Score\"\r\n                    value={state.player2Score}\r\n                    onChange={handleInputChange}\r\n                    labelPosition=\"right\"\r\n                  />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Modal.Content>\r\n        ) : null}\r\n\r\n        <Modal.Actions>\r\n          <Button\r\n            negative\r\n            onClick={() => {\r\n              dispatch({ type: \"reset\" });\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={!state.player2Selected && !state.player1Selected}\r\n            content=\"Save Changes\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={UpdateMatchDetails}\r\n            positive\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  Segment,\r\n  Table,\r\n  Header,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Grid,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../../../../api/toffy\";\r\n\r\nimport { ToastContext } from \"../../../../context/ToastContext\";\r\n\r\nfunction TableRow({ cell1, cell2, cell3, widths }) {\r\n  return (\r\n    <Table.Row>\r\n      <Table.Cell textAlign=\"center\" width={widths[0]}>\r\n        {cell1}\r\n      </Table.Cell>\r\n      <Table.Cell width={widths[1]}>{cell2}</Table.Cell>\r\n      <Table.Cell textAlign=\"center\" width={widths[2]}>\r\n        {cell3}\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n}\r\n\r\nfunction LeaderboardTableRow({ player, score, index, tournament_id, history }) {\r\n  const [playerScore, setPlayerScore] = useState(score);\r\n\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const r = await toffy.patch(`/update/${tournament_id}/${player._id}`, {\r\n        score: playerScore,\r\n      });\r\n    } catch (error) {\r\n      // : failed saving a user score\r\n      showToast(\"error\", \"Failed to save score, try again later.\");\r\n      setPlayerScore(score);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow\r\n      widths={[1, 9, 6]}\r\n      cell1={index + 1}\r\n      cell2={\r\n        <Header as=\"h4\" image inverted>\r\n          <Image src={player.profile_pic} rounded size=\"mini\" />\r\n          <Header.Content>\r\n            <a\r\n              onClick={() => {\r\n                history.push(`/u/${player._id}`);\r\n              }}\r\n            >\r\n              {player.username}\r\n            </a>\r\n            <Header.Subheader>elo: {player.elo}</Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n      }\r\n      cell3={\r\n        <Grid stretched>\r\n          <Grid.Row stretched>\r\n            <Grid.Column width={10}>\r\n              <Input\r\n                value={playerScore}\r\n                onChange={(event, data) => {\r\n                  setPlayerScore(data.value);\r\n                }}\r\n                className=\"settingInput\"\r\n                fluid\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={6} textAlign=\"center\">\r\n              <Button onClick={handleSave} positive compact size=\"small\">\r\n                <Icon name=\"save\" />\r\n                Save\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default function LeaderboardSegment({\r\n  match_data,\r\n  isAdmin,\r\n  tournament_id,\r\n  getTournamentData,\r\n  settings,\r\n}) {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Segment basic>\r\n      <Table inverted striped columns={3} selectable>\r\n        <Table.Header>\r\n          <Table.Row textAlign=\"center\">\r\n            <Table.HeaderCell>Position</Table.HeaderCell>\r\n            <Table.HeaderCell>Player</Table.HeaderCell>\r\n            <Table.HeaderCell>{settings.scoreTitle}</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {[...match_data]\r\n            .sort(function compare(a, b) {\r\n              if (a.score < b.score) {\r\n                return -1;\r\n              }\r\n              if (a.score > b.score) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            })\r\n            .map(({ player, score }, index) => {\r\n              if (isAdmin) {\r\n                return (\r\n                  <LeaderboardTableRow\r\n                    history={history}\r\n                    index={index}\r\n                    tournament_id={tournament_id}\r\n                    player={player}\r\n                    score={score}\r\n                    getTournamentData={getTournamentData}\r\n                  />\r\n                );\r\n              }\r\n              return (\r\n                <TableRow\r\n                  widths={[2, 9, 5]}\r\n                  cell1={index + 1}\r\n                  cell2={\r\n                    <Header as=\"h4\" image inverted>\r\n                      <Image src={player.profile_pic} rounded size=\"mini\" />\r\n                      <Header.Content>\r\n                        <a\r\n                          onClick={() => {\r\n                            history.push(`/u/${player._id}`);\r\n                          }}\r\n                        >\r\n                          {player.username}\r\n                        </a>\r\n                        <Header.Subheader>elo: {player.elo}</Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n                  }\r\n                  cell3={score ? score : \"No Score\"}\r\n                />\r\n              );\r\n            })}\r\n        </Table.Body>\r\n      </Table>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  Segment,\r\n  Divider,\r\n  Header,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\n\r\n// TODO: Come back to this and update the look and feel\r\nexport default function TournamentPlayerDisplay({ players, creator }) {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      {players.length < 1 ? (\r\n        <>\r\n          <Divider section hidden />\r\n          <Segment padded basic textAlign=\"center\" vertical>\r\n            <Header as=\"h1\" icon inverted>\r\n              <Icon name=\"group\" />\r\n              No Players Joined\r\n              <Header.Subheader>be the first to join..</Header.Subheader>\r\n            </Header>\r\n          </Segment>\r\n        </>\r\n      ) : null}\r\n      <Segment basic>\r\n        <Grid stretched>\r\n          {[...players]\r\n            .sort(function compare(a, b) {\r\n              if (a.elo < b.elo) {\r\n                return 1;\r\n              }\r\n              if (a.elo > b.elo) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            })\r\n            .map((player) => {\r\n              return (\r\n                <Grid.Row stretched verticalAlign=\"middle\">\r\n                  <Grid.Column width={1}>\r\n                    <Image rounded src={player.profile_pic} fluid />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={15}>\r\n                    <Header\r\n                      inverted\r\n                      as=\"a\"\r\n                      onClick={() => {\r\n                        history.push(`/u/${player._id}`);\r\n                      }}\r\n                    >\r\n                      {player.username}{\" \"}\r\n                      <Label basic horizontal>\r\n                        <Icon name=\"gem\" />\r\n                        {player.elo}\r\n                      </Label>\r\n                      {creator._id === player._id ? (\r\n                        <small> - you 👋</small>\r\n                      ) : null}\r\n                    </Header>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nexport default function TournamentMenu({ isAdmin, _id, view }) {\r\n  let history = useHistory();\r\n  return (\r\n    <Menu\r\n      id=\"tournamentMenu\"\r\n      pointing\r\n      secondary\r\n      inverted\r\n      style={{ fontSize: 16, marginTop: 15 }}\r\n    >\r\n      {[\r\n        { name: \"Bracket\", view: undefined, icon: null },\r\n        { name: \"Players\", view: \"players\", icon: null },\r\n        isAdmin\r\n          ? {\r\n              name: \"Settings\",\r\n              view: \"settings\",\r\n              icon: (\r\n                <Icon size=\"small\" style={{ color: \"white\" }} name=\"unlock\" />\r\n              ),\r\n            }\r\n          : null,\r\n      ].map((menuItem) => {\r\n        if (!menuItem) {\r\n          return null;\r\n        }\r\n        return (\r\n          <Menu.Item\r\n            as=\"a\"\r\n            onClick={() => {\r\n              history.push(\r\n                `/tournament/${_id}${menuItem.view ? `/${menuItem.view}` : \"\"}`\r\n              );\r\n            }}\r\n            active={view === menuItem.view}\r\n            icon={menuItem.icon ? menuItem.icon : null}\r\n            name={menuItem.name}\r\n          />\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport calculateCreated, {\r\n  displayDate,\r\n  displayState,\r\n} from \"../functions/calculateCreated\";\r\n\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Tab,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport UserPlayingButtonGroup from \"../components/Tournament/TournamentControls/UserPlayingButtonGroup\";\r\nimport AdminTools from \"../components/Tournament/AdministrationTools/AdminTools\";\r\n\r\nimport TournamentBracketSegment from \"../components/Tournament/TournamentDisplays/SingleElimination/TournamentBracketSegment\";\r\nimport LeaderboardSegment from \"../components/Tournament/TournamentDisplays/LeaderBoard/LeaderboardSegment\";\r\n\r\nimport {\r\n  tournament_types,\r\n  states,\r\n} from \"../components/Tournament/TournamentConfig\";\r\n\r\nimport TournamentPlayerDisplay from \"../components/Tournament/TournamentDisplays/TournamentPlayerDisplay\";\r\nimport TournamentMenu from \"../components/Tournament/TournamentMenu\";\r\n\r\nimport { WindowContext } from \"../context/WindowContext\";\r\nimport { ToastContext } from \"../context/ToastContext\";\r\n\r\nexport default function TournamentScreen() {\r\n  let { _id, view } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  const { windowWidth, windowHeight } = useContext(WindowContext);\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  const [result, setResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getTournamentData();\r\n  }, []);\r\n\r\n  const MatchDataDisplayComponent = (type, match_data, isAdmin) => {\r\n    // This determines which tournament display to use: TD5\r\n    if (result.match_data === undefined || result.match_data.length === 0) {\r\n      return (\r\n        <>\r\n          <Divider section hidden />\r\n          <Segment padded basic textAlign=\"center\" vertical>\r\n            <Header as=\"h1\" icon inverted>\r\n              <Icon name=\"trophy\" />\r\n              Match has not started\r\n              <Header.Subheader>\r\n                Waiting for the admin to start.\r\n              </Header.Subheader>\r\n            </Header>\r\n          </Segment>\r\n        </>\r\n      );\r\n    }\r\n    if (type === tournament_types.SINGLE_ELIMINATION) {\r\n      return (\r\n        <TournamentBracketSegment\r\n          getTournamentData={getTournamentData}\r\n          tournament_id={result._id}\r\n          match_data={match_data}\r\n          isAdmin={isAdmin}\r\n          inProgress={result.state === states.PLAY}\r\n        />\r\n      );\r\n    } else if (type === tournament_types.LEADERBOARD) {\r\n      // If tournament type is a leaderboard\r\n      return (\r\n        <LeaderboardSegment\r\n          getTournamentData={getTournamentData}\r\n          tournament_id={result._id}\r\n          match_data={match_data}\r\n          isAdmin={isAdmin}\r\n          settings={result.settings}\r\n          inProgress={result.state === states.PLAY}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const checkTournamentView = (v) => {\r\n    return v === view;\r\n  };\r\n\r\n  const getTournamentData = async () => {\r\n    // This function gathers the tournament information\r\n    try {\r\n      const t = await toffy.get(`/tournament/${_id}`);\r\n      setResult(t.data);\r\n    } catch (error) {\r\n      // : Failed getting the tournament information\r\n      showToast(\"error\", \"Tournament doesn't exist.\");\r\n\r\n      // Send the user back to home screen\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  if (result && view === \"settings\" && !result.isAdmin) {\r\n    // User has tried to enter the settings screen but is not the admin\r\n    history.push(`/tournament/${_id}`);\r\n  }\r\n\r\n  if (!result) {\r\n    // result is null\r\n    return <div>Loading</div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: windowHeight / 7,\r\n            background: \"rgb(235,212,217)\",\r\n            background:\r\n              \"linear-gradient(90deg, rgba(235,212,217,1) 14%, rgba(245,111,235,1) 71%, rgba(255,0,254,1) 100%)\",\r\n          }}\r\n        />\r\n\r\n        {/* This displays the title, type, creation time, desc and join/leave buttons in a sub component */}\r\n        <div\r\n          style={{ backgroundColor: \"#3d4351\", padding: \"20px 0px 0px 0px\" }}\r\n        >\r\n          <Container>\r\n            <Grid doubling stackable>\r\n              <Grid.Row>\r\n                <Grid.Column width={13}>\r\n                  <Segment.Group>\r\n                    <Segment.Group horizontal>\r\n                      <Segment basic style={{ backgroundColor: \"transparent\" }}>\r\n                        <Header as=\"h1\" inverted>\r\n                          {result.title}\r\n                        </Header>\r\n                      </Segment>\r\n                      <Segment\r\n                        basic\r\n                        style={{ backgroundColor: \"transparent\" }}\r\n                        textAlign=\"right\"\r\n                      >\r\n                        <UserPlayingButtonGroup\r\n                          getTournamentData={getTournamentData}\r\n                          tournamentData={result}\r\n                        />\r\n                      </Segment>\r\n                    </Segment.Group>\r\n                    <Segment.Group horizontal={windowWidth > 758}>\r\n                      {[\r\n                        {\r\n                          title: `${result.players.length} Player${\r\n                            result.players.length === 1 ? \"\" : \"s\"\r\n                          }`,\r\n                          icon: \"user\",\r\n                        },\r\n                        { title: result.type, icon: \"trophy\" },\r\n                        {\r\n                          title: displayState(result.state),\r\n                          icon: \"game\",\r\n                        },\r\n                        {\r\n                          title: displayDate(result.created),\r\n                          icon: \"calendar\",\r\n                        },\r\n                      ].map((value) => {\r\n                        return (\r\n                          <Segment basic textAlign=\"left\">\r\n                            <Header inverted size=\"tiny\">\r\n                              <Icon size=\"tiny\" fitted name={value.icon} />\r\n                              <Header.Content style={{ fontSize: 12 }}>\r\n                                {value.title}\r\n                              </Header.Content>\r\n                            </Header>\r\n                          </Segment>\r\n                        );\r\n                      })}\r\n                    </Segment.Group>\r\n                  </Segment.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={3}>\r\n                  <Segment\r\n                    basic\r\n                    style={{\r\n                      display: \"flex\",\r\n                      height: \"100%\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Header as=\"h2\" inverted textAlign=\"left\">\r\n                      <Image circular src={result.creator.profile_pic} />\r\n                      <Header.Content>\r\n                        <Header.Subheader>\r\n                          <div style={{ color: \"white\", fontSize: 14 }}>\r\n                            Organized by\r\n                          </div>\r\n                          <a\r\n                            onClick={() => {\r\n                              history.push(`/u/${result.creator._id}`);\r\n                            }}\r\n                            style={{\r\n                              color: \"orange\",\r\n                              fontWeight: \"900\",\r\n                              textDecoration: \"underline\",\r\n                            }}\r\n                          >\r\n                            {result.creator.username}\r\n                          </a>\r\n                        </Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n                  </Segment>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n          <Container>\r\n            <TournamentMenu isAdmin={result.isAdmin} _id={_id} view={view} />\r\n          </Container>\r\n        </div>\r\n\r\n        <Container>\r\n          {/* Administrator tools for the creator */}\r\n          {checkTournamentView(\"settings\") ? (\r\n            result.isAdmin ? (\r\n              <AdminTools\r\n                tournament={result}\r\n                getTournamentData={getTournamentData}\r\n              />\r\n            ) : null\r\n          ) : null}\r\n\r\n          {/* Display the match data to the user */}\r\n          {checkTournamentView(undefined)\r\n            ? MatchDataDisplayComponent(\r\n                result.type,\r\n                result.match_data,\r\n                result.isAdmin\r\n              )\r\n            : null}\r\n\r\n          {/* This displays the players in a grid */}\r\n          {checkTournamentView(\"players\") ? (\r\n            <TournamentPlayerDisplay\r\n              players={result.players}\r\n              creator={result.creator}\r\n            />\r\n          ) : null}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { createRef, useEffect, useState } from \"react\";\r\n\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default function ChartSegment({\r\n  userData,\r\n  id,\r\n  itemLeft,\r\n  itemRight,\r\n  centerItem,\r\n}) {\r\n  const chartRef = createRef();\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current && userData) {\r\n      const myTournamentChartRef = chartRef.current.getContext(\"2d\");\r\n      const data = {\r\n        labels: [itemLeft.title, itemRight.title],\r\n        datasets: [\r\n          {\r\n            label: `${itemLeft.title}/${itemRight.title}`,\r\n            data: [itemLeft.value, itemRight.value],\r\n            backgroundColor: [itemLeft.color, itemRight.color],\r\n            hoverOffset: 0,\r\n          },\r\n        ],\r\n      };\r\n\r\n      const config = {\r\n        type: \"doughnut\",\r\n        options: {\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n          cutout: \"80%\",\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      if (chartInstance) {\r\n        // Chart has already been initialized, update it rather than create a new one\r\n        chartInstance.data = data;\r\n        chartInstance.update();\r\n      } else {\r\n        // Chart is being initialized for the first time\r\n        setChartInstance(new Chart(myTournamentChartRef, config));\r\n      }\r\n    }\r\n  }, [userData]);\r\n  return (\r\n    <Grid>\r\n      <Grid.Row columns=\"equal\">\r\n        <Grid.Column>\r\n          <canvas ref={chartRef} />\r\n          {centerItem != null ? (\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                bottom: \"50%\",\r\n                left: \"50%\",\r\n                right: \"50%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    fontSize: 30,\r\n                    padding: 10,\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  {centerItem.top}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: 14,\r\n                    marginTop: 2,\r\n                    color: \"grey\",\r\n                  }}\r\n                >\r\n                  {centerItem.bottom}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              height: \"100%\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Grid stretched style={{ width: \"100%\" }}>\r\n              <Grid.Row columns=\"equal\" stretched textAlign=\"center\">\r\n                <Grid.Column>\r\n                  <div\r\n                    style={{\r\n                      color: itemLeft.color,\r\n                      fontSize: 28,\r\n                      fontWeight: \"bolder\",\r\n                      padding: \"10px 0\",\r\n                    }}\r\n                  >\r\n                    {itemLeft.value}\r\n                  </div>\r\n                  <div style={{ color: \"grey\" }}>{itemLeft.title}</div>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <div\r\n                    style={{\r\n                      color: itemRight.color,\r\n                      fontSize: 28,\r\n                      fontWeight: \"bolder\",\r\n                      padding: \"10px 0\",\r\n                    }}\r\n                  >\r\n                    {itemRight.value}\r\n                  </div>\r\n                  <div style={{ color: \"grey\" }}>{itemRight.title}</div>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </div>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport calculateCreated from \"../functions/calculateCreated\";\r\n\r\nimport ChartSegment from \"../components/User/ChartSegment\";\r\n\r\nimport { LoggedInContext } from \"../context/LoggedInContext\";\r\nimport { ToastContext } from \"../context/ToastContext\";\r\nimport { WindowContext } from \"../context/WindowContext\";\r\n\r\nexport default function UserScreen() {\r\n  let { _id } = useParams();\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  const { windowHeight } = useContext(WindowContext);\r\n  const { user_id } = useContext(LoggedInContext);\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  useEffect(() => {\r\n    getUserInformation();\r\n  }, [_id]);\r\n\r\n  const getUserInformation = async () => {\r\n    // This method gathers the user information\r\n    try {\r\n      const user = await toffy.get(`/user/${_id}`);\r\n      setUser(user.data);\r\n    } catch (error) {\r\n      // : error getting the user information\r\n      showToast(\"error\", error.response.data.error);\r\n      // Force the user back\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    // User information is loading\r\n    return (\r\n      <Container>\r\n        <Header>Loading...</Header>\r\n      </Container>\r\n    );\r\n  } else {\r\n    // User information is finished loading\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: windowHeight / 5,\r\n            background: \"rgb(10,67,149)\",\r\n            background:\r\n              \"linear-gradient(90deg, rgba(10,67,149,1) 0%, rgba(0,255,89,1) 100%)\",\r\n          }}\r\n        />\r\n        <Segment basic className=\"container\">\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={8}>\r\n                <Header inverted size=\"huge\">\r\n                  <Image circular src={user.profile_pic} />\r\n                  <Header.Content>\r\n                    {user.username}\r\n                    <Header.Subheader>\r\n                      Joined {calculateCreated(user.date_joined)}{\" \"}\r\n                      <Label>Elo: {user.elo}</Label>\r\n                    </Header.Subheader>\r\n                  </Header.Content>\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column width={8}>\r\n                {user._id === user_id ? (\r\n                  <Button\r\n                    as=\"a\"\r\n                    onClick={() => {\r\n                      history.push(`/u/${_id}/edit`)\r\n                    }}\r\n                    primary\r\n                    floated=\"right\"\r\n                  >\r\n                    Edit Profile\r\n                  </Button>\r\n                ) : (\r\n                  <Button floated=\"right\">Message</Button>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n\r\n          <Divider section hidden />\r\n\r\n          <Grid stackable doubling stretched>\r\n            <Grid.Row columns=\"equal\">\r\n              <Grid.Column>\r\n                <Header inverted size=\"large\">\r\n                  Overall Stats\r\n                </Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row stretched>\r\n              {[\r\n                {\r\n                  title: \"Total tournaments organized\",\r\n                  value: user.tournaments_organized,\r\n                },\r\n                {\r\n                  title: \"Total matches played\",\r\n                  value: user.matches_played.length,\r\n                },\r\n                {\r\n                  title: \"Total tournaments participated\",\r\n                  value: user.total_tournaments_played,\r\n                },\r\n                {\r\n                  title: \"Total matches won\",\r\n                  value: user.matches_won,\r\n                },\r\n              ].map((obj) => {\r\n                return (\r\n                  <Grid.Column\r\n                    computer={4}\r\n                    largeScreen={4}\r\n                    widescreen={4}\r\n                    tablet={8}\r\n                    mobile={16}\r\n                  >\r\n                    <Segment inverted padded textAlign=\"center\">\r\n                      <Header inverted style={{ fontSize: 38 }}>\r\n                        {obj.value}\r\n                      </Header>\r\n                      <Header.Subheader style={{ color: \"grey\" }}>\r\n                        {obj.title}\r\n                      </Header.Subheader>\r\n                    </Segment>\r\n                  </Grid.Column>\r\n                );\r\n              })}\r\n            </Grid.Row>\r\n\r\n            <Divider hidden />\r\n\r\n            <Grid.Row columns=\"equal\">\r\n              <Grid.Column>\r\n                <Header inverted size=\"large\">\r\n                  Games and Matches\r\n                </Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n              <Grid.Column width={8}>\r\n                <div>\r\n                  <Header inverted size=\"medium\" attached=\"top\">\r\n                    Overall Win Rate\r\n                  </Header>\r\n                  <Segment inverted attached padded>\r\n                    <ChartSegment\r\n                      userData={user}\r\n                      centerItem={{\r\n                        top: `${user.win_percentage * 100}%`,\r\n                        bottom: \"Win rate\",\r\n                      }}\r\n                      id=\"matchesChartId\"\r\n                      itemLeft={{\r\n                        title: \"Wins\",\r\n                        value: user.matches_won,\r\n                        color: \"#3ec47b\",\r\n                      }}\r\n                      itemRight={{\r\n                        title: \"Losses\",\r\n                        value: user.matches_lost,\r\n                        color: \"#f95b5c\",\r\n                      }}\r\n                    />\r\n                  </Segment>\r\n                </div>\r\n              </Grid.Column>\r\n              <Grid.Column width={8}>\r\n                <div>\r\n                  <Header inverted size=\"medium\" attached=\"top\">\r\n                    Tournaments\r\n                  </Header>\r\n                  <Segment inverted attached padded>\r\n                    <ChartSegment\r\n                      userData={user}\r\n                      centerItem={null}\r\n                      id=\"tournamentChartId\"\r\n                      itemLeft={{\r\n                        title: \"Organized\",\r\n                        value: user.tournaments_organized,\r\n                        color: \"#00365F\",\r\n                      }}\r\n                      itemRight={{\r\n                        title: \"Participated\",\r\n                        value: user.total_tournaments_played,\r\n                        color: \"#2D9CF1\",\r\n                      }}\r\n                    />\r\n                  </Segment>\r\n                </div>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Divider hidden />\r\n\r\n            <Grid.Row columns=\"equal\">\r\n              <Grid.Column>\r\n                <Header inverted size=\"large\">\r\n                  Recent Games\r\n                </Header>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row columns=\"equal\">\r\n              <Grid.Column>\r\n                {user.matches_played.map((match) => {\r\n                  return (\r\n                    <Segment\r\n                      inverted\r\n                      floated\r\n                      style={{\r\n                        borderTop: `1px solid ${\r\n                          match.winner\r\n                            ? match.winner._id === _id\r\n                              ? \"green\"\r\n                              : \"red\"\r\n                            : \"yellow\"\r\n                        }`,\r\n                        margin: \"5px 0px\",\r\n                      }}\r\n                    >\r\n                      <Header style={{ margin: 0, padding: 0 }}>\r\n                        {match.player1.player\r\n                          ? match.player1.player.username\r\n                          : \"TBA\"}{\" \"}\r\n                        vs{\" \"}\r\n                        {match.player2.player\r\n                          ? match.player2.player.username\r\n                          : \"TBA\"}\r\n                      </Header>\r\n                      <Label\r\n                        color={\r\n                          match.winner\r\n                            ? match.winner._id === _id\r\n                              ? \"green\"\r\n                              : \"red\"\r\n                            : \"yellow\"\r\n                        }\r\n                        attached=\"top right\"\r\n                      >\r\n                        {match.winner\r\n                          ? match.winner._id === _id\r\n                            ? \"WON\"\r\n                            : \"LOST\"\r\n                          : \"IN PROGRESS\"}\r\n                      </Label>\r\n                    </Segment>\r\n                  );\r\n                })}\r\n                {user.matches_played.length === 0 ? (\r\n                  <Segment\r\n                    inverted\r\n                    floated\r\n                    style={{\r\n                      borderTop: `1px solid red`,\r\n                      margin: \"5px 0px\",\r\n                    }}\r\n                  >\r\n                    <Header>No Matches Played</Header>\r\n                  </Segment>\r\n                ) : null}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useReducer, useContext } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Input,\r\n  Button,\r\n  Segment,\r\n  Dropdown,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { tournament_types } from \"../components/Tournament/TournamentConfig\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { ToastContext } from \"../context/ToastContext\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"change_title\":\r\n      return { ...state, title: action.payload };\r\n    case \"change_description\":\r\n      return { ...state, description: action.payload };\r\n    case \"change_listed\":\r\n      return { ...state, listed: action.payload };\r\n    case \"change_type\":\r\n      return { ...state, type: action.payload };\r\n    case \"change_scoreTitle\":\r\n      return { ...state, scoreTitle: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function CreateTournamentScreen() {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    title: \"\",\r\n    description: \"\",\r\n    listed: true,\r\n    type: tournament_types.SINGLE_ELIMINATION,\r\n    scoreTitle: \"\",\r\n  });\r\n\r\n  const { showToast } = useContext(ToastContext);\r\n\r\n  const inputStyle = {\r\n    width: \"100%\",\r\n    maxWidth: 450,\r\n  };\r\n\r\n  const settingContainerStyle = {\r\n    marginBottom: 40,\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const handleInputChange = (event, type) => {\r\n    dispatch({ type, payload: event.target.value });\r\n  };\r\n\r\n  const onTypeChange = (event, data) => {\r\n    dispatch({ type: \"change_type\", payload: data.value });\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    try {\r\n      const response = await toffy.post(\"/create\", state);\r\n      history.push(`/tournament/${response.data}`);\r\n    } catch (error) {\r\n      // : error in creating the tournament\r\n      showToast(\"error\", \"Something went wrong, please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Segment basic>\r\n        <Header style={{ color: \"lightgrey\" }} as=\"h2\">\r\n          <Header.Content>\r\n            Create Tournament\r\n            <Header.Subheader style={{ color: \"lightgrey\" }}>\r\n              Create a new tournament\r\n            </Header.Subheader>\r\n          </Header.Content>\r\n        </Header>\r\n      </Segment>\r\n\r\n      <Segment basic>\r\n        <div style={settingContainerStyle}>\r\n          <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n            <Header.Content>Title</Header.Content>\r\n          </Header>\r\n          <Input\r\n            onChange={(event, data) => {\r\n              dispatch({ type: \"change_title\", payload: data.value });\r\n            }}\r\n            style={inputStyle}\r\n            value={state.title}\r\n            className=\"settingInput\"\r\n          />\r\n          <div className=\"settingLabel\"></div>\r\n        </div>\r\n\r\n        <div style={settingContainerStyle}>\r\n          <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n            <Header.Content>Description</Header.Content>\r\n          </Header>\r\n          <Form>\r\n            <TextArea\r\n              rows={5}\r\n              value={state.description}\r\n              placeholder=\"Talk about rules, player respect, ethics...\"\r\n              onChange={(event) => {\r\n                handleInputChange(event, \"change_description\");\r\n              }}\r\n              className=\"settingTextArea\"\r\n            />\r\n          </Form>\r\n          <div className=\"settingLabel\">\r\n            here you can convey important information to the users wanting to\r\n            join your tournament, talk about rules.\r\n          </div>\r\n        </div>\r\n\r\n        <div style={settingContainerStyle}>\r\n          <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n            <Header.Content>Type</Header.Content>\r\n          </Header>\r\n          <Dropdown\r\n            className=\"settingDropdown\"\r\n            style={inputStyle}\r\n            placeholder=\"Select Tournament Type\"\r\n            selection\r\n            defaultValue={state.type}\r\n            onChange={onTypeChange}\r\n            options={[\r\n              {\r\n                key: tournament_types.LEADERBOARD,\r\n                value: tournament_types.LEADERBOARD,\r\n                text: tournament_types.LEADERBOARD,\r\n              },\r\n              {\r\n                key: tournament_types.SINGLE_ELIMINATION,\r\n                value: tournament_types.SINGLE_ELIMINATION,\r\n                text: tournament_types.SINGLE_ELIMINATION,\r\n              },\r\n            ]}\r\n          />\r\n          <div className=\"settingLabel\"></div>\r\n        </div>\r\n\r\n        <Form inverted>\r\n          {state.type === tournament_types.LEADERBOARD ? (\r\n            <div style={settingContainerStyle}>\r\n              <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n                <Header.Content>Leaderboard scoring field</Header.Content>\r\n              </Header>\r\n              <Input\r\n                value={state.scoreTitle}\r\n                onChange={(event) => {\r\n                  handleInputChange(event, \"change_scoreTitle\");\r\n                }}\r\n                style={inputStyle}\r\n                className=\"settingInput\"\r\n              />\r\n              <div className=\"settingLabel\">\r\n                this is what each player is scored on, if the tournament is a\r\n                speedrun this might be `time` or if its a free-for-all it might\r\n                be `kills`\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div style={{ marginBottom: 15 }}>\r\n            <Button positive onClick={handleFormSubmit} primary>\r\n              Update profile\r\n            </Button>\r\n            <div className=\"settingLabel\">make the new tournament</div>\r\n          </div>\r\n        </Form>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport StorageHelper from \"../helpers/StorageHelper\";\r\n\r\nconst WHITELISTED_PATHS = [\"/login\", \"/\", \"/create/account\"];\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({\r\n  UserLoggedIn,\r\n  handleLogout,\r\n  handleUserLogin,\r\n  token,\r\n  TOKEN_STORAGE_NAME,\r\n}) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    redirect();\r\n  }, []);\r\n\r\n  const redirect = async () => {\r\n    const storageToken = StorageHelper.getStorage(TOKEN_STORAGE_NAME);\r\n    if (storageToken) {\r\n      // token exists so needs testing\r\n      try {\r\n        // Make a request to gather the user information\r\n        const loginAttempt = await toffy.request({\r\n          method: \"get\",\r\n          url: \"/user\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"X-Authorization\": storageToken,\r\n          },\r\n        });\r\n\r\n        // Object destructor to gather username and user_id\r\n        const { username, user_id } = loginAttempt.data;\r\n\r\n        // The token is valid, log the user in\r\n        handleUserLogin({ token: storageToken, username, user_id });\r\n\r\n        // Push the user to the home screen\r\n        // history.push(\"/home\");\r\n      } catch (error) {\r\n        // : the storage token is invalid\r\n        handleLogout();\r\n      }\r\n    } else {\r\n      // No token in storage so need to direct if user is outside auth\r\n      if (!WHITELISTED_PATHS.includes(location.pathname)) {\r\n        // User is outside the auth\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n};\r\n","/**\n * Deep diff between two object, using lodash\n * @param  {Object} object Object compared\n * @param  {Object} base   Object to compare with\n * @return {Object}        Return a new object who represent the diff\n */\nexport function difference(a, b) {\n  let r = {};\n  \n  for (const [key, value] of Object.entries(a)) {\n\n    if(a[key] !== b[key]) {\n      r[key] = value\n    }\n  }\n\n  return r\n}\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Segment,\r\n  Input,\r\n  Button,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\n\r\nimport toffy from \"../api/toffy\";\r\n\r\nimport { LoggedInContext } from \"../context/LoggedInContext\";\r\nimport { ToastContext } from \"../context/ToastContext\";\r\nimport { WindowContext } from \"../context/WindowContext\";\r\n\r\nimport { ALLOWED_PROFILE_IMAGES } from \"../components/Tournament/TournamentConfig\";\r\n\r\nimport { difference } from \"../functions/difference\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"change_username\":\r\n      return { ...state, username: action.payload };\r\n    case \"change_firstname\":\r\n      return { ...state, firstname: action.payload };\r\n    case \"change_lastname\":\r\n      return { ...state, lastname: action.payload };\r\n    case \"change_email\":\r\n      return { ...state, email: action.payload };\r\n    case \"change_profile_pic\":\r\n      return { ...state, profile_pic: action.payload };\r\n    case \"change_state\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function UserEditScreen() {\r\n  let history = useHistory();\r\n\r\n  const { setUsername, user_id } = useContext(LoggedInContext);\r\n  const { showToast } = useContext(ToastContext);\r\n  const { windowHeight } = useContext(WindowContext);\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    username: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    profile_pic: \"\",\r\n  });\r\n\r\n  const inputStyle = {\r\n    width: \"100%\",\r\n    maxWidth: 450,\r\n  };\r\n\r\n  const settingContainerStyle = {\r\n    marginBottom: 40,\r\n  };\r\n\r\n  const handleUserUpdate = async () => {\r\n    //   Handle Updating the user\r\n    setLoading(true);\r\n    let update = difference(state, user);\r\n    try {\r\n      await toffy.patch(`/user`, update);\r\n      setLoading(false);\r\n      history.push(`/u/${user_id}`);\r\n      setUsername(state.username);\r\n      showToast(\"success\", \"Profile updated.\");\r\n    } catch (error) {\r\n      // : Failed user information update\r\n      showToast(\"error\", \"Update failed, please try again later.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getUserInformation = async () => {\r\n    //   This gathers the user information\r\n    try {\r\n      const userRes = await toffy.get(\"/get/user\");\r\n      setUser(userRes.data);\r\n      dispatch({ type: \"change_state\", payload: userRes.data });\r\n    } catch (error) {\r\n      // : Failed to get user information\r\n      showToast(\"error\", \"User doesn't exist.\");\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserInformation();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: windowHeight / 5,\r\n          background: \"rgb(10,67,149)\",\r\n          background:\r\n            \"linear-gradient(90deg, rgba(10,67,149,1) 0%, rgba(0,255,89,1) 100%)\",\r\n        }}\r\n      />\r\n      <Container>\r\n        <Divider hidden />\r\n\r\n        <Segment basic>\r\n          <Header style={{ color: \"lightgrey\" }} as=\"h2\">\r\n            <Header.Content>\r\n              User Settings\r\n              <Header.Subheader style={{ color: \"lightgrey\" }}>\r\n                Manage your account settings\r\n              </Header.Subheader>\r\n            </Header.Content>\r\n          </Header>\r\n        </Segment>\r\n\r\n        <Segment basic style={{ marginLeft: 0, marginRight: 0 }}>\r\n          <div style={settingContainerStyle}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Username</Header.Content>\r\n            </Header>\r\n            <Input\r\n              onChange={(event, data) => {\r\n                dispatch({ type: \"change_username\", payload: data.value });\r\n              }}\r\n              style={inputStyle}\r\n              value={state.username}\r\n              className=\"settingInput\"\r\n            />\r\n          </div>\r\n\r\n          <div style={settingContainerStyle}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Profile image</Header.Content>\r\n            </Header>\r\n            <Image.Group>\r\n              {ALLOWED_PROFILE_IMAGES.map((image) => {\r\n                return (\r\n                  <Image\r\n                    style={{\r\n                      ...(image === state.profile_pic\r\n                        ? { border: \"1px solid orange\" }\r\n                        : {}),\r\n                    }}\r\n                    disabled={image !== state.profile_pic}\r\n                    onClick={() => {\r\n                      dispatch({ type: \"change_profile_pic\", payload: image });\r\n                    }}\r\n                    src={image}\r\n                  />\r\n                );\r\n              })}\r\n            </Image.Group>\r\n          </div>\r\n\r\n          <div style={settingContainerStyle}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Personal Email</Header.Content>\r\n            </Header>\r\n            <Input\r\n              onChange={(event, data) => {\r\n                dispatch({ type: \"change_email\", payload: data.value });\r\n              }}\r\n              style={inputStyle}\r\n              value={state.email}\r\n              className=\"settingInput\"\r\n            />\r\n            <div className=\"settingLabel\">(not visible to other users)</div>\r\n          </div>\r\n\r\n          <div style={settingContainerStyle}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Firstname</Header.Content>\r\n            </Header>\r\n            <Input\r\n              onChange={(event, data) => {\r\n                dispatch({ type: \"change_firstname\", payload: data.value });\r\n              }}\r\n              style={inputStyle}\r\n              value={state.firstname}\r\n              className=\"settingInput\"\r\n            />\r\n            <div className=\"settingLabel\">(not visible to other users)</div>\r\n          </div>\r\n\r\n          <div style={settingContainerStyle}>\r\n            <Header as=\"h4\" style={{ color: \"lightgrey\" }}>\r\n              <Header.Content>Lastname</Header.Content>\r\n            </Header>\r\n            <Input\r\n              onChange={(event, data) => {\r\n                dispatch({ type: \"change_lastname\", payload: data.value });\r\n              }}\r\n              style={inputStyle}\r\n              value={state.lastname}\r\n              className=\"settingInput\"\r\n            />\r\n            <div className=\"settingLabel\">(not visible to other users)</div>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: 15 }}>\r\n            <Button onClick={handleUserUpdate} primary loading={loading}>\r\n              Update profile\r\n            </Button>\r\n            <div className=\"settingLabel\">update changes to profile</div>\r\n          </div>\r\n        </Segment>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./css/index.css\";\n\nimport NavBar from \"./components/NavBar\";\n\nimport { Divider } from \"semantic-ui-react\";\n\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LandingScreen from \"./screens/LandingScreen\";\nimport AccountCreateScreen from \"./screens/AccountCreateScreen\";\nimport TournamentScreen from \"./screens/TournamentScreen\";\nimport UserScreen from \"./screens/UserScreen\";\nimport CreateTournamentScreen from \"./screens/CreateTournamentScreen\";\n\nimport useLoginContext, { LoggedInContext } from \"./context/LoggedInContext\";\nimport useWindowContext, { WindowContext } from \"./context/WindowContext\";\nimport useToastContext, { ToastContext } from \"./context/ToastContext\";\n\nimport RedirectLogin from \"./functions/redirectLogin\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\n\nconst routes = [\n  {\n    routeName: \"/u/:_id/edit\",\n    routerComponent: <UserEditScreen />,\n  },\n  {\n    routeName: \"/create/tournament\",\n    routerComponent: <CreateTournamentScreen />,\n  },\n  {\n    routeName: \"/u/:_id\",\n    routerComponent: <UserScreen />,\n  },\n  {\n    routeName: \"/tournament/:_id/:view?\",\n    routerComponent: <TournamentScreen />,\n  },\n  {\n    routeName: \"/create/account\",\n    routerComponent: <AccountCreateScreen />,\n  },\n  {\n    routeName: \"/login\",\n    routerComponent: <LoginScreen />,\n  },\n  {\n    routeName: \"/home\",\n    routerComponent: <HomeScreen />,\n  },\n  {\n    routeName: \"/\",\n    routerComponent: <LandingScreen />,\n  },\n];\n\nfunction App() {\n  // Context inits\n  const [LoginContext] = useLoginContext();\n  const [WindowContextValues] = useWindowContext();\n  const [ToastContainer, ToastValues] = useToastContext();\n\n  RedirectLogin(LoginContext);\n\n  return (\n    <WindowContext.Provider value={WindowContextValues}>\n      <ToastContext.Provider value={ToastValues}>\n        <LoggedInContext.Provider value={LoginContext}>\n          <div>\n            <NavBar routes={routes} />\n            <div>\n              <Switch>\n                {routes.map((route) => {\n                  return (\n                    <Route path={route.routeName}>\n                      {route.routerComponent}\n                    </Route>\n                  );\n                })}\n              </Switch>\n            </div>\n          </div>\n          {![\"/\", \"/login\", \"/create/account\"].includes(\n            window.location.pathname\n          ) ? (\n            <Divider section />\n          ) : null}\n          {ToastContainer}\n        </LoggedInContext.Provider>\n      </ToastContext.Provider>\n    </WindowContext.Provider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/toffy\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}